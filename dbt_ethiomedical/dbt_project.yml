
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_ethiomedical'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_ethiomedical'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
#models:
 # dbt_ethiomedical:
    # Config indicated by + and applies to all files under models/example/
  #  example:
  #    +materialized: view
  # Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

models:
  # This references the project name 'dbt_ethiomedical' from the top of the file
  dbt_ethiomedical:
    # We apply configurations to sub-directories inside the "models" folder.
    staging:
      # All models in models/staging will be created as views.
      enable: true
      +materialized: view
    marts:
        # All models in models/marts/core will be created as tables.
      enable: true
      +materialized: table
    intermediate:
      # All models in models/intermediate will be created as incremental models.
      enable: true
      +materialized: incremental
      # This is an example of a model that can be configured to run only once.
      # You can set the `unique_key` to a column that uniquely identifies each row.
      #+unique_key: id
      #+incremental_strategy: merge
      #+file_format: parquet

